name: Build

on:
  push:
    branches:
      - master
      - develop/*
  pull_request:
    branches:
      - master
  release:
    types: [ published ]

defaults:
  run:
    shell: bash

jobs:
  build_wheels_windows:
    name: Build wheels on Windows
    runs-on: windows-latest
    strategy:
      fail-fast: False
      matrix:
        python-version: [ 3.6, 3.7, 3.8 ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install SWIG
        run: choco install swig -y

      - name: Build wheels
        run: |
          python -m pip install -U pip numpy wheel
          python setup.py bdist_wheel -d dist

      - name: Place wheels in artifacts folder
        uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl

  build_wheels_unix:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: False
      matrix:
        os: [ ubuntu-latest, macos-latest ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Setup Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

  #      - name: Build wheels
  #        env:
  #          # only build CPython-3.6 and later and skip 32-bit builds
  #          CIBW_BUILD: cp36-* cp37-* cp38-*
  #          CIBW_BEFORE_ALL_LINUX: yum update -y && yum install pcre-devel -y
  #          CIBW_BEFORE_ALL_MACOS: brew install swig
  #          CIBW_BEFORE_BUILD: python -m pip install -u pip numpy cibuildwheel==1.5.1
  #          CIBW_BEFORE_BUILD_LINUX: |
  #            scripts/install_swig.sh
  #            python -m pip install cmake
  #          CIBW_TEST_COMMAND: python {project}/extern/nlopt/test/t_python.py
  #        run: python -m cibuildwheel --output-dir dist

  test-wheels:
    name: Test package installation
    needs: [ build_wheels_windows ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest ]
        python-version: [ 3.6, 3.7, 3.8 ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Retrieve packages
        uses: actions/download-artifact@v2
        with:
          path: dist

      - name: Test Package Installation
        run: |
          python -m pip install --upgrade pip

          # finds path to the right wheel or source file to install later
          os=$(echo ${{ runner.os }} | awk '{print tolower($0)}' | head -c3)

          # version refers to the python version. So 3.8 -> 38
          version=$(echo ${{ matrix.python-version }} | sed 's/\.//g')

          # this finds files like
          # nlopt-2.6.2-cp36-cp36m-win_amd64.whl
          # nlopt-2.6.2-cp36-cp36m-manylinux10_amd64.whl
          file=$(find dist -name "nlopt-*${version}*${os}*.whl" -type f);

          pip install ${file}
          python extern/nlopt/test/t_python.py
