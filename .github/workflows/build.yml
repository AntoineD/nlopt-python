name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - develop/*
  pull_request:
    branches:
      - master
  release:
    types: [ published ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.3
        env:
          CIBW_BEFORE_BUILD_WINDOWS: choco install swig -y
          CIBW_BEFORE_BUILD_LINUX: yum install swig -y
          CIBW_BEFORE_BUILD_MACOS: brew install swig
          CIBW_BUILD: cp37-* cp38-* cp39-* cp310-* cp311-*
          CIBW_SKIP: *-manylinux_i686 *-musllinux*
          CIBW_TEST_COMMAND: python extern/nlopt/test/t_python.py



  deploy:
    name: deploy packages
    runs-on: ubuntu-latest
    needs: test-wheels
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Retrieve packages
        uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - name: Install twine
        run: pip install twine

      - name: Upload packages to testpypi
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_TEST_UID }}
          TWINE_PASSWORD: ${{ secrets.PYPI_TEST_PWD }}
        run: python -m twine upload --skip-existing --repository testpypi dist/*

      - name: Upload packages to pypi
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_UID }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PWD }}
        run: python -m twine upload --skip-existing dist/*
